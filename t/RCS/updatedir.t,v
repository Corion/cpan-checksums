head	1.5;
access;
symbols
	v1_016:1.5
	v1_015:1.5
	v1_014:1.5
	v1_011:1.5
	v1_0:1.5
	v1_009:1.5
	v1_008:1.5
	v1_007:1.5
	v1_005:1.5
	v1_004:1.5
	v1_003:1.4
	v1_002:1.4
	v1_001:1.1;
locks; strict;
comment	@# @;


1.5
date	2000.12.11.09.42.08;	author k;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.10.09.12.45;	author k;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.10.07.02.42;	author k;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.10.07.01.28;	author k;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.10.06.35.18;	author k;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@# -*- Mode: cperl; cperl-indent-level: 4 -*-

# Before `make install' is performed this script should be runnable with
# `make test'. After `make install' it should work as `perl test.pl'

######################### We start with some black magic to print on failure.

# Change 1..1 below to 1..last_test_to_print .
# (It may become useful if the test is moved to ./t subdirectory.)

BEGIN { $| = 1; print "1..6\n"; }
END {print "not ok 1\n" unless $loaded;}
use CPAN::Checksums;
$loaded = 1;
print "ok 1\n";

######################### End of black magic.

# Insert your test code below (better if it prints "ok 13"
# (correspondingly "not ok 13") depending on the success of chunk 13
# of the test code):

my $ret = CPAN::Checksums::updatedir("t");
print $ret == 1 ? "ok 2\n" : "# ret[$ret]\nnot ok 2\n";

chmod 0644, "t/43";
open F, ">t/43" or die;
print F "44\n";
close F;
$CPAN::Checksums::CAUTION=1;
my $warn;
$SIG{__WARN__} = sub { $warn = shift; };
$ret = CPAN::Checksums::updatedir("t");
print $ret == 2 ? "ok 3\n" : "# ret[$ret]\nnot ok 3\n";

print $warn =~ /^differing old\/new/m ? "ok 4\n" : "# warn[$warn]\nnot ok 4\n";

open F, ">t/43";
print F "43\n";
close F;
$warn = "";

$CPAN::Checksums::CAUTION=0;
$ret = CPAN::Checksums::updatedir("t");
print $ret == 2 ? "ok 5\n" : "# ret[$ret]\nnot ok 5\n";

print $warn eq "" ? "ok 6\n" : "# warn[$warn]\nnot ok 6\n";

@


1.4
log
@*** empty log message ***
@
text
@d1 2
d11 1
a11 1
BEGIN { $| = 1; print "1..2\n"; }
d23 26
a48 8
if (eval "require Algorithm::Diff") {
  local($CPAN::Checksums::VERBOSE) = 1;
  my $ret = CPAN::Checksums::updatedir("t");
  print $ret == 1 ? "ok 2\n" : "# ret[$ret]\nnot ok 2\n";
} else {
  my $ret = CPAN::Checksums::updatedir("t");
  print $ret == 1 ? "ok 2\n" : "# ret[$ret]\nnot ok 2\n";
}
@


1.3
log
@*** empty log message ***
@
text
@d21 1
a21 1
if (eval "use Algorithm::Diff") {
d23 2
a24 1
  print CPAN::Checksums::updatedir("t") == 1 ? "ok 2\n" : "not ok 2\n";
d26 2
a27 1
  print CPAN::Checksums::updatedir("t") == 1 ? "ok 2\n" : "not ok 2\n";
@


1.2
log
@*** empty log message ***
@
text
@d22 1
a22 1
  local CPAN::Checksums::VERBOSE=1;
@


1.1
log
@Initial revision
@
text
@d21 6
a26 2

print CPAN::Checksums::updatedir("t") == 1 ? "ok 2\n" : "not ok 2\n";
@
